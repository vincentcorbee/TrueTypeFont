import { FontDirectory, Glyph, Tables } from '../types';
export declare class TrueTypeFont {
    numGlyphs: number;
    fontDirectory: FontDirectory;
    tables: Tables;
    private platformID;
    private platformSpecificID;
    private languageID;
    private reader;
    constructor(arrayBuffer: ArrayBuffer);
    get buffer(): ArrayBuffer;
    get fontFamily(): any;
    get fontSubfamily(): any;
    get postScriptName(): any;
    get fullName(): any;
    get version(): number;
    get fontRevision(): number;
    get checkSumAdjustment(): number;
    get magicNumber(): number;
    get flags(): number;
    get italicAngle(): number;
    get isFixedPitch(): number;
    get unitsPerEm(): number;
    get created(): Date;
    get modified(): Date;
    get xMin(): number;
    get yMin(): number;
    get xMax(): number;
    get yMax(): number;
    get BBox(): number[];
    get ascent(): any;
    get descent(): any;
    get xHeight(): any;
    get capHeight(): any;
    get macStyle(): number;
    get lowestRecPPEM(): number;
    get fontDirectionHint(): number;
    get indexToLocFormat(): number;
    get glyphDataFormat(): number;
    private getNumGlyphs;
    private readHheaTable;
    private readHmtxTable;
    private readPostTable;
    private readNameTable;
    private readOS2Table;
    private readCmapTable;
    private readGSUBTable;
    private readTables;
    private readHeadTable;
    private readCoords;
    private readCompoundGlyph;
    private readSimpleGlyph;
    private getUnicode;
    private getGlyphIndexMap;
    private getGlyphOffset;
    private getGlyphName;
    getGlyphByChar(char: string): Glyph | null;
    getGlyphByUnicode(code: number): Glyph | null;
    getGlyphByName(name: string): Glyph | null;
    readGlyph(glyphIndex: number): Glyph | null;
    readGlyphs(cb: (glyph: Glyph | null, index: number) => void): void;
}
//# sourceMappingURL=true-type-font.d.ts.map